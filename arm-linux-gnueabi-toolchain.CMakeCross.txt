cmake_minimum_required(VERSION 3.0)
set(CMAKE_SYSTEM_NAME Linux)

set(CMAKE_C_COMPILER /usr/bin/arm-linux-gnueabi-gcc)
set(CMAKE_CXX_COMPILER /usr/bin/arm-linux-gnueabi-g++)

# for future: supported since CMAKE 3.1
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_compile_options(-std=c++11)
add_compile_options(-fPIC)

set(CMAKE_LINKER /usr/bin/arm-linux-gnueabi-ld CACHE FILEPATH "Toolchain linker")
set(CMAKE_AR /usr/bin/arm-linux-gnueabi-ar CACHE FILEPATH "Toolchain archiver")
set(CMAKE_NM /usr/bin/arm-linux-gnueabi-nm CACHE FILEPATH "Toolchain name tool")
set(CMAKE_STRIP /usr/bin/arm-linux-gnueabi-strip)

set(CMAKE_CXX_FLAGS_DEBUG -g)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)


set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "armel" CACHE STRING "Target machine architecture")
